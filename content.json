{"meta":{"title":"baize","subtitle":"","description":"","author":"bythere","url":"https://baize1112.github.io","root":"/"},"pages":[{"title":"about","date":"2021-05-16T01:31:52.000Z","updated":"2021-05-16T01:31:52.145Z","comments":true,"path":"about/index.html","permalink":"https://baize1112.github.io/about/index.html","excerpt":"","text":""},{"title":"","date":"2021-05-16T01:37:33.500Z","updated":"2021-05-16T01:37:33.500Z","comments":true,"path":"board/index.html","permalink":"https://baize1112.github.io/board/index.html","excerpt":"","text":"boards"}],"posts":[{"title":"冒泡排序","slug":"algorithm/bubblesort","date":"2021-05-16T11:11:30.000Z","updated":"2021-05-16T03:23:42.244Z","comments":true,"path":"2021/05/16/algorithm/bubblesort/","link":"","permalink":"https://baize1112.github.io/2021/05/16/algorithm/bubblesort/","excerpt":"","text":"还是先在本子上理清算法步骤再写代码比较好 123456789101112131415161718192021222324252627282930313233343536373839404142#include &lt;stdio.h&gt;void bubbleSort(int *arr[],int len)&#123; int i,j,temp; for(i=0;i&lt;len-1;i++) &#123; for(j=0;j&lt;len-i-1;j++) &#123; if(arr[j]&gt;arr[j+1]) &#123; temp=arr[j]; arr[j+1]=arr[j]; arr[j]=temp; &#125; &#125; &#125;&#125;void main()&#123; int len; printf(&quot;Please input the length of array:&quot;); scanf(&quot;%d&quot;,&amp;len); int arr[len]; int i=0; printf(&quot;Please input the elements of array:&quot;); for(i=0;i&lt;len;i++) &#123; //printf(&quot;请输入第%d个数：&quot;,i+1); scanf(&quot;%d&quot;,&amp;arr[i]); &#125; printf(&quot;The order after sorting is:&quot;); bubbleSort(arr,len); for(i=0;i&lt;len;i++) &#123; printf(&quot;%d\\n&quot;,arr[i]); &#125;&#125;","categories":[{"name":"算法学习","slug":"算法学习","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"},{"name":"排序算法","slug":"算法学习/排序算法","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://baize1112.github.io/tags/%E7%AE%97%E6%B3%95/"}],"author":"Bythere"},{"title":"插入排序","slug":"algorithm/insertSort","date":"2021-05-16T11:11:30.000Z","updated":"2021-05-16T03:24:09.592Z","comments":true,"path":"2021/05/16/algorithm/insertSort/","link":"","permalink":"https://baize1112.github.io/2021/05/16/algorithm/insertSort/","excerpt":"","text":"选择元素插入已排好的序列中 1234567891011121314151617181920212223242526272829303132#include &lt;stdio.h&gt;void insertSort(int arr[],int len)&#123; int i,j,key; for(i=1;i&lt;len;i++) &#123; key=arr[i]; for(j=i;j&gt;0;j--) &#123; if(key&lt;arr[j-1]) &#123; arr[j]=arr[j-1]; &#125; else break; &#125; arr[j]=key; &#125;&#125;void main()&#123; int arr[]=&#123;1,2,3,4,9,8,7,6,5,0&#125;; int len = (int)sizeof(arr)/sizeof(*arr); printf(&quot;The order after sorting is:\\n&quot;); insertSort(arr,len); for(int i=0;i&lt;len;i++) &#123; printf(&quot;%d &quot;,arr[i]); &#125;&#125;","categories":[{"name":"算法学习","slug":"算法学习","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"},{"name":"排序算法","slug":"算法学习/排序算法","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://baize1112.github.io/tags/%E7%AE%97%E6%B3%95/"}],"author":"Bythere"},{"title":"选择排序","slug":"algorithm/selctionsort","date":"2021-05-16T11:11:30.000Z","updated":"2021-05-16T03:24:08.271Z","comments":true,"path":"2021/05/16/algorithm/selctionsort/","link":"","permalink":"https://baize1112.github.io/2021/05/16/algorithm/selctionsort/","excerpt":"","text":"每趟选择一个最大的元素（或最小的元素）与数组前面的元素交换只需记录其下标就好 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;void selectionSort(int arr[],int len)&#123; int i,j,temp,index; for(i=0;i&lt;len-1;i++) &#123; index=i; for(j=i;j&lt;len-1;j++) &#123; if(arr[index]&lt;arr[j+1]) //也可以大于来判断 &#123; index=j+1; &#125; &#125; if(index!=i) &#123; temp=arr[index]; arr[index]=arr[i]; arr[i]=temp; &#125; &#125;&#125;void main()&#123; int arr[]=&#123;1,2,3,4,9,8,7,6,5,0&#125;; int len = (int)sizeof(arr)/sizeof(*arr); printf(&quot;The order after sorting is:\\n&quot;); selectionSort(arr,len); for(int i=0;i&lt;len;i++) &#123; printf(&quot;%d &quot;,arr[i]); &#125;&#125;","categories":[{"name":"算法学习","slug":"算法学习","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"},{"name":"排序算法","slug":"算法学习/排序算法","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://baize1112.github.io/tags/%E7%AE%97%E6%B3%95/"}],"author":"Bythere"},{"title":"希尔排序","slug":"algorithm/shellsort","date":"2021-05-16T11:11:30.000Z","updated":"2021-05-16T03:24:07.118Z","comments":true,"path":"2021/05/16/algorithm/shellsort/","link":"","permalink":"https://baize1112.github.io/2021/05/16/algorithm/shellsort/","excerpt":"","text":"希尔排序是改进的插入排序，又称递减增量排序把元素通过gap分组，gap初始值可以随意取值，一般为length一半，进行组内排序，然后gap减半再次组内排序，直至为1 1234567891011121314151617181920212223242526272829303132333435#include &lt;stdio.h&gt;void shellSort(int arr[],int len)&#123; int i,j,key,gap; for(gap=len/2;gap&gt;0;gap=gap/2) &#123; for(i=gap;i&lt;len;i++) &#123; key=arr[i]; for(j=i;j&gt;0;j=j-gap) &#123; if(key&lt;arr[j-gap]) &#123; arr[j]=arr[j-gap]; &#125; else break; &#125; arr[j]=key; &#125; &#125;&#125;void main()&#123; int arr[]=&#123;1,2,3,4,9,8,7,6,5,0&#125;; int len = (int)sizeof(arr)/sizeof(*arr); printf(&quot;The order after sorting is:\\n&quot;); shellSort(arr,len); for(int i=0;i&lt;len;i++) &#123; printf(&quot;%d &quot;,arr[i]); &#125;&#125;","categories":[{"name":"算法学习","slug":"算法学习","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"},{"name":"排序算法","slug":"算法学习/排序算法","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://baize1112.github.io/tags/%E7%AE%97%E6%B3%95/"}],"author":"Bythere"}],"categories":[{"name":"算法学习","slug":"算法学习","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"},{"name":"排序算法","slug":"算法学习/排序算法","permalink":"https://baize1112.github.io/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"}],"tags":[{"name":"算法","slug":"算法","permalink":"https://baize1112.github.io/tags/%E7%AE%97%E6%B3%95/"}]}